k8ssandra:
  cassandraVersion: "3.11.9"
  clusterName: k8ssandra
  datacenterName: dc1
  rackName: default # this is the only supported value for now
  size: 1
  cassandraLibDirVolume:
    storageClass: standard
    size: 5Gi
  # If enabled, resources.limits and resources.requests must be defined
  allowMultipleNodesPerWorker: false
  resources: {}

stargate:
  # configuration regarding the Stargate API
  enabled: false
  replicas: 1
  clusterVersion: "3.11" # this is the only supported value for now
  containerImage: "auto" # chooses image based on clusterVersion

# Configuration regarding configuration of repair services
repair:
  # Reaper repair service and UI
  reaper:
    autoschedule: false
    enabled: true
    jmx:
      username: ""
      password: ""
    operator:
      enabled: true

backupRestore:
  medusa:
    # If enabled, bucketName and bucketSecret must be defined.
    enabled: false

    # Set to true to use the same bucket across multiple clusters.
    multiTenant: false

    # Accepted values are s3 and gcs
    storage: s3

    # Must be set to the name of the remote storage bucket where backups will be stored.
    bucketName: ""

    # Must be set and specify the name of the secret that stores the key file for Google
    # Cloud or AWS
    bucketSecret: ""

# Support for accessing the various web-interfaces via K8s ingress controllers.
# Depending on the ingress available in your cluster enable the appropriate
# section.
ingress:
  traefik:
    # Set to `true` to enable the templating of Traefik ingress custom resources
    enabled: false

    # Repair service
    repair:
      # Note this will **only** work if `ingress.traefik.enabled` is also `true`
      enabled: true

      # Name of the Traefik entrypoints where we want to source traffic.
      entrypoints:
        - web

      # Hostname Traefik should use for matching requests.
      host: repair.k8ssandra.cluster.local

    # Cassandra native transport ingress support
    cassandra:
      # Note this will **only** work if `ingress.traefik.enabled` is also `true`
      enabled: true

      # Name of the Traefik entrypoints for source traffic
      entrypoints:
        - cassandra

monitoring:
  grafana: 
    provision_dashboards: true

  prometheus:
    provision_service_monitors: true

cleaner:
  image: burmanm/k8ssandra-client:latest

cass-operator:
  # Namespace-scoped installs are currently not (well) supported.
  # See K8C-19 for details.
  clusterWideInstall: true

  # We need to use a patched version of cass-operator for now that has changes needed in
  # for Reaper and Medusa integration. Images will be built from
  # https://github.com/jsanda/cass-operator/tree/k8ssandra.
  image: jsanda/cass-operator:91205f4d8f1e

kube-prometheus-stack:
  # Disable default service monitors
  coreDns:
    enabled: false
  kubeApiServer:
    enabled: false
  kubeControllerManager:
    enabled: false
  kubeDns:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeProxy:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeStateMetrics:
    enabled: false
  kubelet:
    enabled: false
  nodeExporter:
    enabled: false

  alertmanager:
    enabled: false
    serviceMonitor:
      selfMonitor: false

  # Locks Prometheus operator to this namespace and kube-system
  prometheusOperator:
    namespaces:
      releaseNamespace: true
      additional: []

    # Disable monitoring of operator
    serviceMonitor:
      selfMonitor: false

  prometheus:
    prometheusSpec:
      # Uncomment to listen for Prometheus traffic under a route prefix
      # externalUrl: http://localhost:9090/prometheus
      # routePrefix: /prometheus
    
    # Enable templating of ingress resources for external prometheus traffic
    ingress:
      enabled: false
      paths: []
        # Uncomment to listen for Prometheus traffic under a route prefix
        # - /prometheus

    # Disable monitoring the Prometheus instance
    serviceMonitor:
      selfMonitor: false

    # Disable default service monitors
    # additionalServiceMonitors: []

  grafana:
    ingress:
      enabled: false
      # Uncomment to listen for Grafana traffic under a route prefix
      # path: /grafana
    
    # Credentials for accessing the provisioned Grafana
    adminUser: admin
    adminPassword: admin

    # Disable monitoring Grafana
    serviceMonitor:
      selfMonitor: false

    # Disable default dashboards
    defaultDashboardsEnabled: false

    # Additional plugins to be installed during Grafana startup
    plugins:
      # Used by the cassandra-overview dashboard
      - grafana-polystat-panel

    # Uncomment to listen for Grafana traffic under a route prefix
    # grafana.ini:
    #   server:
    #     root_url: http://localhost:3000/grafana
    #     serve_from_sub_path: true
